before:
  hooks:
    - go mod download
    - go mod tidy
builds:
  - id: cli_template_name-darwin
    ldflags:
      - -s -w -X github.com/cli_template_owner/cli_template_name/version.Version={{.Version}} -X github.com/cli_template_owner/cli_template_name/version.Commit={{.FullCommit}}
    goos:
      - darwin
    goarch:
      - amd64
      - arm64
  - id: cli_template_name-linux
    ldflags:
      - -s -w -X github.com/cli_template_owner/cli_template_name/version.Version={{.Version}} -X github.com/cli_template_owner/cli_template_name/version.Commit={{.FullCommit}}
    goos:
      - linux
    goarch:
      - amd64
archives:
  - id: cli_template_name-archive
    name_template: "{{ .ProjectName }}_v{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    format_overrides:
      - goos: darwin
        format: zip
    files:
      - README.md
checksum:
  name_template: "checksums.txt"
snapshot:
  name_template: "{{ .Version }}-next"
changelog:
  skip: true
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
brews:
  - name: cli_template_name
    tap:
      owner: cli_template_owner
      name: cli_template_homebrew_tap_name
    commit_author:
      name: "cli_template_fullname"
    homepage: https://github.com/cli_template_owner/cli_template_name
    description: cli_template_description
    license: cli_template_license
    install: |
      bin.install 'cli_template_name'
      output = Utils.safe_popen_read("#{bin}/cli_template_name", 'completion', 'bash')
      (bash_completion/'cli_template_name').write output
      output = Utils.safe_popen_read("#{bin}/cli_template_name", 'completion', 'zsh')
      (zsh_completion/'_cli_template_name').write output
